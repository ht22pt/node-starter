version: '3'

services:

  # Nginx web server acting as a reverse proxy for "web" and "api" services
  nginx:
    image: nginx:1.13.1-alpine
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/log/nginx
      - /var/run
    depends_on:
      - api
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./config/nginx-snippets:/etc/nginx/snippets:ro
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Data API and authentication/authorization
  api:
    image: node:8.1.2-alpine
    hostname: api
    depends_on:
      - db
      - redis
    environment:
      - CORS_ORIGIN=http://localhost:3001,http://localhost:3000
      - DATABASE_URL=postgres://postgres@127.0.0.1:5432/opla_demo1
      - DATABASE_DEBUG=false
      - REDIS_URL=redis://127.0.0.1:6379/0
      - SESSION_SECRET=wZjwhFtzQsd7r87W6AZw45Sm
      - FACEBOOK_ID=749092561958564
      - FACEBOOK_SECRET=4fb6c3881d7d9921b0d41c9bab6b7638
      - GOOGLE_ID=536447408233-apfaoam0s2o9auul70bjfotu5b7def18.apps.googleusercontent.com
      - GOOGLE_SECRET=AEBnNpaMxVxVlvNyzJwBdoJw
      - TWITTER_KEY=OcHCaDqUhjXMIIKKjkBIG7EDr
      - TWITTER_SECRET=4svE6BRCdUfUjjloRAX5KNjVZ5qnOsrbTtojmbENAZ5rpjfSyM
    expose:
      - "8080"
    ports:
      - "127.0.0.1:9229:9229" # V8 inspector for tools/run.js
      - "127.0.0.1:9230:9230" # V8 inspector for src/serer.js
    volumes:
      - yarn:/root/.cache/yarn
      - ./:/usr/src/app
    user: node
    working_dir: /usr/src/app
    command: node tools/run.js # or, `node --inspect=0.0.0.0:9229 tools/run.js`

  # SQL and document data store
  db:
    image: postgres:9.6.3-alpine
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - db:/var/lib/postgresql/data
      - ./config/postgres-initdb.sh:/docker-entrypoint-initdb.d/initdb.sh

  # Distributed in-memory cache
  redis:
    image: redis:3.2.9-alpine
    read_only: true
    volumes:
      - redis:/data
    user: redis

volumes:
  db:
  redis:
  yarn:
